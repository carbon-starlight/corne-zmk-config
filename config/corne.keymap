/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 41 40 39>;
        };
    };

    combos {
        compatible = "zmk,combos";

        search {
            bindings = <&kp LG(SPACE)>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q            &kp W            &kp F              &kp P                &kp G         &kp J      &kp L         &kp U               &kp Y             &kp SEMICOLON     &kp LEFT_BRACKET
&kp TAB    &hmr LEFT_GUI A  &hmr LEFT_ALT R  &hmr LEFT_SHIFT S  &hmr LEFT_CONTROL T  &kp D         &kp H      &hml RCTRL N  &hml RIGHT_SHIFT E  &hml RIGHT_ALT I  &hml RIGHT_GUI O  &kp SQT
&kp CAPS   &kp Z            &kp X            &kp C              &kp V                &kp B         &kp K      &kp M         &kp COMMA           &kp DOT           &kp FSLH          &caps_word
                                             &tog 5             &lt 1 LEFT_GUI       &kp RETURN    &kp SPACE  &mo 2         &kp BACKSPACE
            >;
        };

        Navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL             &kp LEFT_BRACE                  &kp EQUAL              &kp RIGHT_BRACE                      &kp PRCNT         &kp PAGE_UP    &kp HOME         &kp UP_ARROW  &kp END          &kp DELETE      &kp ESCAPE
&trans     &hmr LEFT_GUI MINUS  &hmr LEFT_ALT LEFT_PARENTHESIS  &hmr LEFT_SHIFT MINUS  &hmr LEFT_CONTROL RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp PAGE_DOWN  &kp LEFT         &kp DOWN      &kp RIGHT        &kp BACKSPACE   &kp K_CONTEXT_MENU
&trans     &trans               &kp LEFT_BRACKET                &kp UNDERSCORE         &kp RIGHT_BRACKET                    &kp MINUS         &kp INSERT     &kp PRINTSCREEN  &kp CAPSLOCK  &kp PAUSE_BREAK  &kp SCROLLLOCK  &kp SYSREQ
                                                                &trans                 &trans                               &trans            &trans         &trans           &trans
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp LEFT_PARENTHESIS  &lt 4 STAR   &kp AMPERSAND  &kp SPACE    &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp DOT       &kp CARET
&trans  &trans  &kp CARET             &kp PERCENT  &kp DOLLAR     &kp SPACE    &kp PLUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp NUMBER_0  &kp SLASH
&trans  &trans  &kp HASH              &kp AT       &kp EXCL       &kp SPACE    &kp MINUS     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER     &kp KP_NUMLOCK
                                      &trans       &trans         &trans       &kp N0        &trans        &kp DELETE
            >;
        };

        System {
            bindings = <
&trans  &trans           &trans                      &trans                &trans                  &trans    &kp C_BRIGHTNESS_INC  &kp LG(H)     &kp LG(DOWN)      &kp LG(UP)          &kp C_AC_CLOSE  &trans
&trans  &kp C_AC_SEARCH  &kp C_AL_INSTANT_MESSAGING  &kp C_AL_TEXT_EDITOR  &kp C_AL_WWW            &trans    &trans                &kp LG(LEFT)  &kp LG(DOWN)      &kp LG(UP_ARROW)    &kp LG(RIGHT)   &trans
&trans  &trans           &trans                      &kp C_AL_FILES        &kp C_AL_CONTROL_PANEL  &trans    &kp C_BRIGHTNESS_DEC  &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &trans          &trans
                                                     &trans                &trans                  &trans    &trans                &trans        &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &kp F7   &kp F8   &kp F9  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &kp F4   &kp F5   &kp F6  &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans   &kp F1   &kp F2   &kp F3  &kp F11  &trans
                        &trans  &trans  &trans    &kp F10  &kp F11  &kp F12
            >;
        };

        Gaming {
            bindings = <
&kp ESCAPE    &kp TAB       &kp Q  &kp W       &kp E  &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL     &kp CAPSLOCK  &kp A  &kp S       &kp D  &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_ALT  &kp LSHIFT    &kp Z  &kp X       &kp C  &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp ESCAPE  &sl 6  &kp SPACE    &trans  &trans  &to 7
            >;
        };

        Gaming_numbers {
            bindings = <
&trans  &kp N6        &kp N7        &kp N8        &kp N9        &kp N0    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        Rulemak {
            bindings = <
&kp GRAVE  &kp Z  &kp SEMI  &kp A  &kp G  &kp U        &kp K      &kp E  &kp S            &kp DOT  &kp I     &kp O
&kp SQT    &kp F  &kp H     &kp C  &kp N  &kp L        &kp X      &kp Y  &kp T            &kp B    &kp J     &kp M
&trans     &kp P  &kp LBKT  &kp W  &kp D  &kp COMMA    &kp R      &kp V  &kp COMMA        &kp DOT  &kp FSLH  &trans
                            &to 0  &mo 1  &kp SPACE    &kp SPACE  &mo 2  &lt 8 BACKSPACE
            >;
        };

        KbControl {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &bootloader
&trans  &bt BT_CLR    &bt BT_PRV    &trans        &bt BT_NXT    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
